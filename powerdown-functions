#!/usr/bin/env bash
# powerdown-utils

# turn on kernel options
opt() {
  [[ -w $1 ]] || return
  # for disable cpu
  [[ $(cat $1) == $2 && $1 == /sys/devices/system/cpu/cpu*/online ]] && return
  echo $2 | tee $1 &>/dev/null || echo "[powerdown] cannot write $2 to $1"
}

check () {
  [[ -r $1 ]] || return
  echo "[powerdown] $1: $(cat $1)"
}

# unload kernel module
unload() {
  has $1 || return
  loaded $1 || return
  rmmod -w $1 &>/dev/null || echo "[powerdown] cannot unload module $1"
}

# load kernel module
load() {
  has $1 || return
  loaded $1 && return
  modprobe $1 &>/dev/null || echo "[powerdown] cannot load module $1"
}

# module exists
has() {
  modinfo $1 &>/dev/null
  return $?
}

# module loaded
loaded() {
  [[ $(lsmod | cut -f 1 -d " " | grep "^$1$") != "" ]] && return 0 || return 1
}

# command
run() {
  $@ &> /dev/null || echo "[powerdown] cannot run $@"
}

# get current power usage
display_power() {
  mWh=$(($(cat /sys/class/power_supply/BAT0/power_now)/1000))
  echo "[powerdown] using $mWh mWh"
}

# get readahead
display_readahead() {
  echo "[powerdown] $1 readahead: $(blockdev --getra $1)"
}


display_module() {
  has $1 || return
  echo -n "[powerdown] $1 "
  loaded && echo "loaded" || echo "not loaded"
}

display_wireless() {
  control=$(iwconfig $1 | grep "Power Management" | cut -d : -f 2)
  echo "[powerdown] $1 power management: $control"
}
